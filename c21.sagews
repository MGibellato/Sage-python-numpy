︠5a1a352a-515b-49ae-ba96-937bf5068b33s︠
#problem 2
def coin_flip():
    if random()<.5:
        return("H")
    else:
        return("T")
︡a9215c6a-fc5c-44bf-ae5f-9820f6d5e15a︡{"done":true}
︠ac158a47-6613-4d2d-9bc6-44105a8b53cbs︠
def coin_flips(n):
    flip_results = []
    for i in [1..n]:
        flip_results.append(coin_flip())
    return flip_results
︡9d330c16-0b36-45a7-8068-7b75c1885ea1︡{"done":true}
︠fe1eb6c3-cc61-4aeb-8f8b-274732da9d06s︠
coin_flips(70)
︡dd5c9932-8b4d-4d7f-83a0-b0be62e1f521︡{"stdout":"['H', 'T', 'H', 'H', 'T', 'T', 'T', 'H', 'T', 'T', 'H', 'T', 'H', 'T', 'T', 'T', 'T', 'T', 'H', 'T', 'H', 'H', 'H', 'H', 'T', 'T', 'T', 'T', 'T', 'H', 'H', 'H', 'T', 'T', 'H', 'T', 'H', 'H', 'H', 'T', 'T', 'T', 'T', 'H', 'H', 'T', 'H', 'H', 'T', 'H', 'T', 'H', 'H', 'T', 'H', 'H', 'H', 'H', 'H', 'T', 'T', 'H', 'T', 'T', 'T', 'T', 'T', 'H', 'T', 'T']\n"}︡{"done":true}
︠4a3933ab-72c1-4ab1-ac64-923dabaf539fs︠
#problem 3
def number_of_heads(n):
    flip_results = []
    for i in [1..n]:
        flip_results.append(coin_flip())
    return flip_results.count("H")
︡e4894b19-33a6-43c7-bad5-67613f6dfb71︡{"done":true}
︠7c6766ac-1001-4dc2-aaca-f4ece2dcba94s︠
number_of_heads(100)
︡e1e980bc-27da-4948-9335-4a73063e111c︡{"stdout":"45\n"}︡{"done":true}
︠2f7b41b2-ded0-4341-a85b-42560a9fa14es︠
#problem 4
def heads_tails(n):
    flip_results = []
    for i in [1..n]:
        flip_results.append(coin_flip())
    print("{} heads".format(flip_results.count("H")))
    print("{} Tails".format(flip_results.count("T")))
︡e7276293-f8b7-49ba-951e-0578231c226e︡{"done":true}
︠52e9b555-603d-4201-8d6c-c9ab0be9ed72s︠
heads_tails(89)
︡5b383456-6786-4b32-8c93-4752781f1621︡{"stdout":"37 heads\n52 Tails\n"}︡{"done":true}
︠22ad3e65-42c1-4293-8d2a-83537d8d0a96s︠
#problem 5
experiment_results = []
experiment_results.append(coin_flips(100))
print(experiment_results)
︡9feb49da-3ab6-4780-a874-2a1701e7829b︡{"stdoutn"}︡{"done":true}
︠b00333cb-a9cf-49b7-9888-62d276f1e27fs︠
def experiment(n):
    experiment_results = []
    for i in [1..n]:
        experiment_results.append(number_of_heads(100))
    return experiment_results
︡953c3871-e89e-4e5e-be82-98ad3ddb1025︡{"done":true}
︠4b4c36d3-b546-4403-b9fa-d245d048d9des︠
experiment(100)
︡749f1861-79f2-48a2-82d1-bf9922f18770︡{"stdout":"[44, 47, 54, 41, 53, 53, 41, 48, 46, 47, 53, 49, 55, 49, 54, 51, 45, 43, 46, 57, 48, 55, 51, 64, 50, 55, 42, 55, 53, 47, 43, 61, 43, 47, 47, 49, 52, 45, 60, 35, 57, 52, 52, 54, 45, 41, 55, 53, 58, 51, 60, 43, 59, 31, 47, 57, 50, 56, 51, 57, 50, 51, 55, 45, 57, 61, 49, 48, 49, 46, 50, 49, 56, 48, 54, 61, 54, 51, 50, 53, 46, 50, 47, 46, 49, 50, 54, 43, 49, 45, 50, 57, 51, 56, 52, 46, 53, 50, 50, 50]\n"}︡{"done":true}
︠a9ace9da-5d2d-4b2f-b6d2-689a9f80074as︠
experiment(1000)
︡232b2b89-f851-40a6-9b94-9c0f7df910ef︡{"stdout":"[45, 53, 53, 52, 52, 50, 48, 54, 51, 51, 48, 47, 41, 50, 50, 51, 53, 52, 59, 47, 51, 50, 51, 46, 52, 48, 56, 43, 50, 45, 47, 45, 50, 41, 55, 49, 54, 52, 46, 52, 40, 47, 48, 51, 48, 49, 56, 52, 56, 55, 36, 38, 51, 52, 57, 43, 46, 51, 49, 51, 49, 48, 53, 47, 56, 51, 46, 47, 53, 49, 54, 51, 43, 48, 54, 62, 52, 50, 47, 47, 49, 40, 50, 53, 53, 48, 49, 40, 47, 53, 46, 50, 51, 48, 46, 55, 47, 49, 48, 57, 53, 42, 49, 41, 50, 47, 58, 43, 53, 46, 46, 52, 47, 45, 51, 44, 59, 53, 44, 61, 42, 45, 54, 46, 45, 48, 56, 59, 48, 48, 48, 41, 48, 51, 47, 53, 57, 53, 51, 51, 49, 43, 54, 50, 43, 47, 43, 43, 51, 65, 49, 50, 51, 46, 57, 49, 46, 51, 59, 48, 52, 52, 54, 53, 45, 60, 49, 46, 51, 56, 60, 36, 56, 49, 47, 46, 54, 49, 60, 47, 62, 51, 45, 52, 58, 48, 51, 49, 51, 47, 49, 47, 49, 48, 55, 49, 40, 52, 47, 48, 57, 48, 46, 50, 46, 50, 56, 58, 53, 44, 55, 48, 46, 56, 47, 54, 56, 54, 44, 52, 50, 54, 51, 54, 56, 50, 67, 52, 47, 48, 45, 48, 50, 50, 64, 52, 51, 53, 51, 54, 46, 43, 60, 55, 49, 48, 56, 40, 47, 48, 50, 46, 47, 54, 48, 48, 50, 55, 37, 49, 46, 47, 51, 44, 45, 50, 56, 49, 56, 45, 53, 49, 49, 51, 52, 56, 49, 41, 50, 50, 53, 40, 37, 49, 48, 48, 52, 58, 58, 57, 59, 48, 50, 51, 51, 57, 51, 48, 52, 52, 43, 53, 51, 46, 47, 51, 42, 52, 57, 56, 46, 49, 55, 49, 46, 49, 53, 60, 41, 48, 47, 39, 50, 53, 49, 53, 52, 44, 47, 51, 39, 45, 50, 48, 59, 42, 44, 63, 55, 51, 53, 54, 53, 59, 47, 46, 55, 37, 55, 46, 46, 57, 54, 52, 60, 49, 53, 47, 46, 50, 49, 48, 60, 47, 51, 50, 46, 57, 54, 50, 43, 52, 50, 50, 44, 54, 51, 48, 43, 56, 50, 49, 50, 46, 46, 54, 42, 46, 49, 45, 47, 58, 44, 51, 45, 48, 47, 50, 43, 49, 52, 47, 59, 51, 49, 54, 57, 49, 49, 45, 47, 58, 57, 51, 47, 45, 55, 45, 52, 46, 51, 54, 51, 48, 43, 52, 44, 43, 51, 54, 50, 38, 54, 51, 59, 41, 45, 48, 47, 41, 50, 53, 48, 63, 41, 47, 53, 46, 48, 44, 52, 56, 45, 35, 46, 64, 50, 44, 47, 54, 55, 48, 44, 48, 49, 52, 42, 45, 49, 47, 55, 53, 59, 48, 53, 47, 43, 56, 52, 53, 54, 48, 46, 53, 48, 52, 47, 49, 52, 48, 50, 38, 61, 54, 63, 43, 50, 50, 45, 48, 55, 46, 48, 55, 57, 55, 55, 40, 55, 46, 57, 48, 51, 52, 56, 52, 49, 46, 56, 51, 64, 41, 60, 42, 55, 50, 50, 53, 46, 40, 52, 45, 52, 47, 58, 46, 49, 49, 50, 49, 57, 45, 53, 49, 41, 40, 48, 52, 47, 48, 55, 56, 52, 54, 54, 45, 52, 56, 51, 44, 58, 50, 48, 47, 52, 56, 50, 45, 47, 45, 56, 53, 52, 50, 51, 53, 47, 59, 48, 49, 51, 55, 53, 48, 41, 57, 53, 59, 55, 42, 48, 34, 52, 45, 45, 51, 46, 49, 52, 63, 51, 37, 56, 58, 55, 63, 51, 51, 53, 43, 52, 45, 58, 51, 54, 47, 55, 53, 42, 52, 46, 49, 41, 52, 55, 35, 49, 53, 45, 44, 48, 56, 51, 57, 43, 52, 56, 51, 45, 46, 45, 47, 51, 51, 51, 56, 45, 48, 39, 52, 50, 53, 48, 45, 48, 49, 42, 55, 43, 44, 47, 48, 55, 57, 46, 47, 52, 52, 55, 48, 50, 54, 58, 54, 54, 62, 59, 51, 47, 51, 60, 51, 51, 40, 49, 60, 55, 41, 46, 50, 45, 47, 51, 51, 53, 55, 51, 64, 51, 43, 40, 50, 53, 51, 43, 43, 50, 61, 47, 40, 52, 45, 45, 44, 46, 57, 54, 47, 52, 38, 52, 50, 43, 51, 48, 62, 53, 52, 54, 44, 55, 54, 58, 59, 58, 51, 51, 56, 56, 55, 49, 49, 49, 48, 48, 44, 42, 51, 47, 50, 52, 52, 54, 56, 47, 44, 54, 53, 51, 52, 52, 50, 54, 45, 51, 53, 54, 36, 44, 45, 55, 50, 51, 49, 50, 57, 56, 47, 51, 44, 47, 46, 52, 59, 57, 52, 52, 58, 52, 41, 43, 44, 50, 53, 60, 48, 52, 52, 57, 63, 41, 55, 50, 52, 50, 44, 47, 57, 47, 45, 55, 46, 48, 55, 40, 50, 52, 55, 55, 43, 49, 54, 57, 55, 51, 47, 55, 53, 48, 46, 52, 55, 53, 40, 51, 51, 43, 58, 50, 53, 54, 50, 54, 42, 49, 57, 46, 54, 58, 54, 46, 54, 51, 58, 53, 53, 45, 58, 50, 55, 52, 51, 46, 47, 54, 58, 49, 58, 53, 55, 54, 52, 55, 44, 48, 51, 50, 48, 55, 54, 54, 52, 50, 60, 44, 38, 48, 49, 48, 45, 54, 50, 46, 53, 48, 56, 50, 60, 45, 55, 59, 51, 52, 47, 40, 51, 44, 50, 50, 56, 44, 52, 50, 47, 45, 48, 49, 50, 46, 50, 44, 44, 46, 43, 49, 52, 49, 47, 43, 53, 55, 46, 55, 46, 50, 58, 55, 42, 48, 46, 45, 52, 50, 48, 50, 54, 45, 49, 48, 52, 43, 46, 54, 55, 50, 54, 52, 53, 51, 55, 49, 50, 47, 54, 58, 43, 54, 54, 51, 50, 42, 53, 53, 47, 55, 47, 44, 58, 55, 46, 59, 47, 55, 45, 52, 46, 47, 58, 42, 60, 49, 56, 52, 53, 49, 43, 45, 59, 50, 61]"}︡{"stdout":"\n"}︡{"done":true}
︠f579afe5-3066-4b0a-b59b-c4e62a1f7754s︠
experiment_results = experiment(1000)
︡c86ad3eb-d885-4643-8afc-9cc7da21fef8︡{"done":true}
︠ce83459a-7e8b-433e-b417-b160513ae833s︠
experiment_results[:10]
︡f3065507-c30e-405b-9566-562d7585eaa6︡{"stdout":"[51, 54, 43, 43, 43, 48, 48, 52, 56, 49]\n"}︡{"done":true}
︠1dfaf45a-2588-48b0-acf5-cd806818ff40s︠
#problem 6
histogram(experiment_results)
︡bfa57c9b-b9c3-42c0-80bf-25a5f3b08ce4︡{"file":{"filename":"/home/user/.sage/temp/project-5a6de5dc-ebca-4bd1-a580-ae91550b717e/582/tmp_m51_flhp.svg","show":true,"text":null,"uuid":"9e8a3db5-5981-4b3d-b94b-b4ee7fec772d"},"once":false}︡{"done":true}
#problem 7
def streak_at_i(flip_data,i):
    experiment(i)
#problem 8
#problem 9










