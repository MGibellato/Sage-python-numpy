︠423dfdde-9f40-459c-ad4c-b768763d8c83s︠
#problem 2
randint(5,100)
︡e4a10daa-ebb3-48ce-ae75-d0ca1f52069b︡{"stdout":"41"}︡{"stdout":"\n"}︡{"done":true}
︠cba0c8ea-0617-49ad-b8f3-647ae46936dbs︠
randint(5,100)
︡4f268862-b51f-42d6-aa7b-37fc163798e8︡{"stdout":"39\n"}︡{"done":true}
︠a1c335f0-a45f-45b5-a14e-5e7e75bd9dc0s︠
randint(5,100)
︡19ac202f-f37c-48bd-ad16-ed2b3365360c︡{"stdout":"97\n"}︡{"done":true}
︠99d23f45-386a-407e-9f3c-46b99fb76014s︠
randint(5,100)
︡7f8b028d-92ad-414b-932b-60c2b713000d︡{"stdout":"93\n"}︡{"done":true}
︠3473da02-0941-4b70-8f1c-29e885f2b819s︠
#problem 3
data = [0]*96
for _ in [1..10]:
    x = randint(5,100)
    translated_index = x-5
    print(x)
    data[translated_index] = data[translated_index] + 1
    
    data
#the data is quite uniform
︡ccb9fc75-1bf0-4d0c-bf17-2d89d2acb239︡{"stdout":"80\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n74\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n77\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n40\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n48\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n22\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n23\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n46\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n95\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]\n65\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]\n"}︡{"done":true}
︠2d6b0c44-a775-4ada-b1cd-486e0bd6f0bbs︠
data = [0]*96
for _ in [1..1000]:
    x = randint(5,100)
    translated_index = x-5
    
    data[translated_index] = data[translated_index] + 1
    
data
︡654882b4-79f7-415e-ae65-ca27e95c20d0︡{"stdout":"[9, 12, 10, 11, 12, 4, 7, 8, 13, 12, 10, 2, 11, 7, 10, 15, 7, 9, 9, 13, 7, 12, 14, 7, 6, 12, 15, 6, 11, 19, 9, 7, 11, 12, 13, 8, 13, 12, 9, 14, 10, 15, 5, 10, 12, 16, 12, 14, 9, 5, 9, 15, 9, 6, 21, 11, 7, 13, 7, 15, 9, 5, 11, 12, 4, 14, 14, 10, 11, 6, 5, 12, 16, 9, 10, 6, 13, 7, 9, 6, 8, 15, 5, 10, 9, 9, 10, 7, 16, 11, 12, 16, 15, 14, 15, 10]\n"}︡{"done":true}
︠b8dbe6b8-8c58-45be-8241-ff97c793b5dcs︠
histogram(data)
︡4fb55968-33c4-4eb6-9e8f-06575816d976︡{"file":{"filename":"/home/user/.sage/temp/project-5a6de5dc-ebca-4bd1-a580-ae91550b717e/550/tmp_wnn_55cj.svg","show":true,"text":null,"uuid":"6fed966a-547d-463b-8373-6be55b2d4797"},"once":false}︡{"done":true}
︠fb3ff078-d009-455b-8e0e-03ae71e50be4s︠
data = [0]*96
for _ in [1..1000000]:
    x = randint(5,100)
    translated_index = x-5
    
    data[translated_index] = data[translated_index] + 1
    
data
︡1c8457e7-f591-4643-b5fb-01000eecc41a︡{"stdout":"[10516, 10351, 10440, 10456, 10612, 10508, 10556, 10214, 10282, 10300, 10319, 10170, 10549, 10259, 10399, 10387, 10553, 10352, 10550, 10493, 10503, 10279, 10446, 10315, 10453, 10189, 10528, 10468, 10419, 10452, 10512, 10452, 10364, 10431, 10506, 10336, 10470, 10644, 10103, 10599, 10366, 10268, 10372, 10319, 10327, 10465, 10323, 10427, 10397, 10510, 10475, 10331, 10315, 10141, 10570, 10501, 10421, 10428, 10487, 10374, 10289, 10407, 10341, 10694, 10341, 10437, 10476, 10553, 10623, 10520, 10342, 10352, 10523, 10362, 10498, 10429, 10430, 10472, 10448, 10420, 10392, 10392, 10605, 10590, 10389, 10472, 10273, 10483, 10349, 10387, 10552, 10405, 10260, 10265, 10423, 10254]\n"}︡{"done":true}
︠f0b263fc-313b-4e71-81c7-3ade48e4a16es︠
histogram(data)
︡2061ffff-0744-4ea6-b165-65c31990b02b︡{"file":{"filename":"/home/user/.sage/temp/project-5a6de5dc-ebca-4bd1-a580-ae91550b717e/1320/tmp_4izs46t3.svg","show":true,"text":null,"uuid":"348e2136-32bf-4f9b-8da3-31b6a5256d3d"},"once":false}︡{"done":true}
︠4926a69e-595a-4d80-9aa0-f761db3329d3s︠
#problem 4
sum = 0
i = 0
fib = fibonacci(i)
while fib < 4000000:
    if fib%2 == 0:
        sum = sum + fib
    i = i + 1
    fib = fibonacci(i)
︡b7072a0b-88ad-4acb-895c-635b733041bc︡{"done":true}
︠1abe3b45-f086-4422-80f5-7a020b04e512s︠
sum
︡daddcbe7-519d-4332-ba5b-c366c529dbef︡{"stdout":"4613732\n"}︡{"done":true}
︠1a530666-8370-495d-bed2-a9515f8a1b96s︠
#problem 5
def coin_flip():
    if random()<.5:
        return("H")
    else:
        return("T")
︡607dd173-a0d7-47d9-9cc0-b1d2e86fc291︡{"done":true}
︠2ad81c03-99f5-45e4-afa7-1668b273fb6bs︠
def coin_flips(n):
    A = []
    for i in [1..n]:
        A.append(coin_flip())
    return(A)
︡42b9b231-023b-4b57-8435-080ea5753410︡{"done":true}
︠069da7b4-0e2c-4534-aafd-d5950bf96c70s︠
coin_flips(30)
︡7a72b474-311a-488b-b2f1-9e5bf13f1a73︡{"stdout":"['H', 'H', 'T', 'H', 'T', 'T', 'T', 'T', 'T', 'H', 'H', 'T', 'T', 'H', 'T', 'T', 'T', 'T', 'T', 'H', 'H', 'T', 'T', 'T', 'T', 'H', 'H', 'H', 'H', 'T']\n"}︡{"done":true}
#problem 6










